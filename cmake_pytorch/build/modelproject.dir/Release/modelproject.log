  main.cpp
D:\vscode\libtorch\include\c10/util/Exception.h(28,45): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“c10::Error”的基
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\vscode\libtorch\include\c10/util/Exception.h(28): message : 参见“c10::Error”的声明
D:\vscode\libtorch\include\c10/util/Exception.h(30,19): warning C4251: “c10::Error::msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\c10/util/Exception.h(35,36): warning C4251: “c10::Error::context_”: class“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口由 class“c10::Error”的客户端使用
D:\vscode\libtorch\include\c10/util/Exception.h(35): message : 参见“std::vector<std::string,std::allocator<std::string>>”的声明
D:\vscode\libtorch\include\c10/util/Exception.h(40,25): warning C4251: “c10::Error::backtrace_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\c10/util/Exception.h(47,20): warning C4251: “c10::Error::what_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\c10/util/Exception.h(48,38): warning C4251: “c10::Error::what_without_backtrace_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(54,39): warning C4251: “c10::ThreadLocalDebugInfo::info_”: class“std::shared_ptr<c10::DebugInfoBase>”需要有 dll 接口由 class“c10::ThreadLocalDebugInfo”的客户端使用
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(35): message : 参见“std::shared_ptr<c10::DebugInfoBase>”的声明
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(56,53): warning C4251: “c10::ThreadLocalDebugInfo::parent_info_”: class“std::shared_ptr<c10::ThreadLocalDebugInfo>”需要有 dll 接口由 class“c10::ThreadLocalDebugInfo”的客户端使用
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(38): message : 参见“std::shared_ptr<c10::ThreadLocalDebugInfo>”的声明
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(82,52): warning C4251: “c10::DebugInfoGuard::prev_info_”: class“std::shared_ptr<c10::ThreadLocalDebugInfo>”需要有 dll 接口由 class“c10::DebugInfoGuard”的客户端使用
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(38): message : 参见“std::shared_ptr<c10::ThreadLocalDebugInfo>”的声明
D:\vscode\libtorch\include\c10/core/Allocator.h(22,34): warning C4251: “c10::DataPtr::ptr_”: class“c10::detail::UniqueVoidPtr”需要有 dll 接口由 class“c10::DataPtr”的客户端使用
D:\vscode\libtorch\include\c10/util/UniqueVoidPtr.h(38): message : 参见“c10::detail::UniqueVoidPtr”的声明
D:\vscode\libtorch\include\c10/core/Allocator.h(184,57): warning C4251: “c10::InefficientStdFunctionContext::ptr_”: class“std::unique_ptr<void,std::function<void (void *)>>”需要有 dll 接口由 struct“c10::InefficientStdFunctionContext”的客户端使用
D:\vscode\libtorch\include\c10/core/Allocator.h(184): message : 参见“std::unique_ptr<void,std::function<void (void *)>>”的声明
D:\vscode\libtorch\include\c10/util/llvmMathExtras.h(550,40): warning C4267: “return”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\vscode\libtorch\include\c10/util/llvmMathExtras.h(556,40): warning C4267: “return”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\vscode\libtorch\include\c10/util/llvmMathExtras.h(563,44): warning C4267: “return”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\vscode\libtorch\include\c10/util/llvmMathExtras.h(569,44): warning C4267: “return”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half.h(378,25): warning C4244: “参数”: 从“T”转换到“float”，可能丢失数据
          with
          [
              T=double
          ]
D:\vscode\libtorch\include\c10/util/Half.h(378,12): warning C4244: “参数”: 从“T”转换到“float”，可能丢失数据
          with
          [
              T=double
          ]
D:\vscode\libtorch\include\c10/util/Half-inl.h(173,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(176,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(179,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(182,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(186,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(189,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(192,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(195,28): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(201,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(204,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(207,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(210,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(214,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(217,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(220,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/Half-inl.h(223,28): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(148,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(151,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(154,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(157,36): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(161,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(164,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(167,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(170,32): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(176,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(179,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(182,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(185,36): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(189,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(192,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(195,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/BFloat16-inl.h(198,32): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\c10/util/typeid.h(68,67): warning C4251: “c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_”: struct“c10::util::type_index”需要有 dll 接口由 class“c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>”的客户端使用
D:\vscode\libtorch\include\c10/util/TypeIndex.h(57): message : 参见“c10::util::type_index”的声明
D:\vscode\libtorch\include\c10/core/Scalar.h(137,6): warning C4251: “c10::Scalar::v”: union“c10::Scalar::v_t”需要有 dll 接口由 class“c10::Scalar”的客户端使用
D:\vscode\libtorch\include\c10/core/Scalar.h(132): message : 参见“c10::Scalar::v_t”的声明
D:\vscode\libtorch\include\c10/util/intrusive_ptr.h(66,40): warning C4251: “c10::intrusive_ptr_target::refcount_”: struct“std::atomic<unsigned __int64>”需要有 dll 接口由 class“c10::intrusive_ptr_target”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\atomic(2771): message : 参见“std::atomic<unsigned __int64>”的声明
D:\vscode\libtorch\include\c10/util/intrusive_ptr.h(67,41): warning C4251: “c10::intrusive_ptr_target::weakcount_”: struct“std::atomic<unsigned __int64>”需要有 dll 接口由 class“c10::intrusive_ptr_target”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\atomic(2771): message : 参见“std::atomic<unsigned __int64>”的声明
D:\vscode\libtorch\include\c10/core/Storage.h(151,48): warning C4251: “c10::Storage::storage_impl_”: class“c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“c10::Storage”的客户端使用
          with
          [
              TTarget=c10::StorageImpl
          ]
D:\vscode\libtorch\include\c10/core/Storage.h(12): message : 参见“c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::StorageImpl
          ]
D:\vscode\libtorch\include\c10/core/impl/LocalDispatchKeySet.h(53,27): warning C4251: “c10::impl::LocalDispatchKeySet::included_”: class“c10::DispatchKeySet”需要有 dll 接口由 struct“c10::impl::LocalDispatchKeySet”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\c10/core/impl/LocalDispatchKeySet.h(54,27): warning C4251: “c10::impl::LocalDispatchKeySet::excluded_”: class“c10::DispatchKeySet”需要有 dll 接口由 struct“c10::impl::LocalDispatchKeySet”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\c10/core/impl/LocalDispatchKeySet.h(77,26): warning C4251: “c10::impl::IncludeDispatchKeyGuard::include_”: class“c10::DispatchKeySet”需要有 dll 接口由 class“c10::impl::IncludeDispatchKeyGuard”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\c10/core/impl/LocalDispatchKeySet.h(93,26): warning C4251: “c10::impl::ExcludeDispatchKeyGuard::exclude_”: class“c10::DispatchKeySet”需要有 dll 接口由 class“c10::impl::ExcludeDispatchKeyGuard”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\c10/util/logging_is_not_google_glog.h(43,28): warning C4251: “c10::MessageLogger::stream_”: class“std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::MessageLogger”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\iosfwd(222): message : 参见“std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(224,54): warning C4251: “c10::VariableVersion::version_counter_”: class“c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“c10::VariableVersion”的客户端使用
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
D:\vscode\libtorch\include\c10/core/TensorImpl.h(224): message : 参见“c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1614,62): warning C4251: “c10::TensorImpl::autograd_meta_”: class“std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>”需要有 dll 接口由 struct“c10::TensorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorImpl.h(152): message : 参见“std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1617,69): warning C4251: “c10::TensorImpl::named_tensor_meta_”: class“std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>”需要有 dll 接口由 struct“c10::TensorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorImpl.h(171): message : 参见“std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1639,32): warning C4251: “c10::TensorImpl::sizes_”: class“c10::SmallVector<int64_t,5>”需要有 dll 接口由 struct“c10::TensorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1639): message : 参见“c10::SmallVector<int64_t,5>”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1640,34): warning C4251: “c10::TensorImpl::strides_”: class“c10::SmallVector<int64_t,5>”需要有 dll 接口由 struct“c10::TensorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1639): message : 参见“c10::SmallVector<int64_t,5>”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1665,41): warning C4251: “c10::TensorImpl::device_opt_”: class“c10::optional<c10::Device>”需要有 dll 接口由 struct“c10::TensorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorOptions.h(21): message : 参见“c10::optional<c10::Device>”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1672,26): warning C4251: “c10::TensorImpl::key_set_”: class“c10::DispatchKeySet”需要有 dll 接口由 struct“c10::TensorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1040,30): warning C4244: “参数”: 从“float”转换到“const _Ty”，可能丢失数据
          with
          [
              _Ty=uint64_t
          ]
D:\vscode\libtorch\include\c10/core/TensorImpl.h(1391,24): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/DeprecatedTypePropertiesRegistry.h(26,47): warning C4251: “at::DeprecatedTypePropertiesRegistry::registry”: class“std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>”需要有 dll 接口由 class“at::DeprecatedTypePropertiesRegistry”的客户端使用
D:\vscode\libtorch\include\ATen/core/DeprecatedTypePropertiesRegistry.h(24): message : 参见“std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>”的声明
D:\vscode\libtorch\include\c10/core/GeneratorImpl.h(77,20): warning C4251: “c10::GeneratorImpl::mutex_”: class“std::mutex”需要有 dll 接口由 struct“c10::GeneratorImpl”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(87): message : 参见“std::mutex”的声明
D:\vscode\libtorch\include\c10/core/GeneratorImpl.h(91,28): warning C4251: “c10::GeneratorImpl::key_set_”: class“c10::DispatchKeySet”需要有 dll 接口由 struct“c10::GeneratorImpl”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\ATen/core/Generator.h(120,47): warning C4251: “at::Generator::impl_”: class“c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“at::Generator”的客户端使用
          with
          [
              TTarget=c10::GeneratorImpl
          ]
D:\vscode\libtorch\include\c10/core/GeneratorImpl.h(68): message : 参见“c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::GeneratorImpl
          ]
D:\vscode\libtorch\include\ATen/core/NamedTensor.h(67,30): warning C4251: “at::NamedTensorMeta::names_”: class“std::vector<at::Dimname,std::allocator<at::Dimname>>”需要有 dll 接口由 struct“at::NamedTensorMeta”的客户端使用
D:\vscode\libtorch\include\ATen/core/NamedTensor.h(33): message : 参见“std::vector<at::Dimname,std::allocator<at::Dimname>>”的声明
D:\vscode\libtorch\include\ATen/core/TensorBody.h(1318,60): warning C4251: “at::Tensor::impl_”: class“c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>”需要有 dll 接口由 class“at::Tensor”的客户端使用
D:\vscode\libtorch\include\ATen/core/TensorBody.h(87): message : 参见“c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>”的声明
D:\vscode\libtorch\include\ATen/CPUGeneratorImpl.h(32,22): warning C4251: “at::CPUGeneratorImpl::engine_”: class“at::mt19937_engine”需要有 dll 接口由 struct“at::CPUGeneratorImpl”的客户端使用
D:\vscode\libtorch\include\ATen/core/MT19937RNGEngine.h(108): message : 参见“at::mt19937_engine”的声明
D:\vscode\libtorch\include\ATen/CPUGeneratorImpl.h(33,49): warning C4251: “at::CPUGeneratorImpl::next_float_normal_sample_”: class“c10::optional<float>”需要有 dll 接口由 struct“at::CPUGeneratorImpl”的客户端使用
D:\vscode\libtorch\include\ATen/CPUGeneratorImpl.h(23): message : 参见“c10::optional<float>”的声明
D:\vscode\libtorch\include\ATen/CPUGeneratorImpl.h(34,51): warning C4251: “at::CPUGeneratorImpl::next_double_normal_sample_”: class“c10::optional<double>”需要有 dll 接口由 struct“at::CPUGeneratorImpl”的客户端使用
D:\vscode\libtorch\include\ATen/core/TensorBody.h(831): message : 参见“c10::optional<double>”的声明
D:\vscode\libtorch\include\c10/core/Stream.h(135,47): warning C4244: “参数”: 从“unsigned __int64”转换到“c10::DeviceIndex”，可能丢失数据
D:\vscode\libtorch\include\c10/core/Stream.h(135,62): warning C4244: “参数”: 从“unsigned __int64”转换到“c10::StreamId”，可能丢失数据
D:\vscode\libtorch\include\ATen/Context.h(209,26): warning C4251: “at::Context::thc_init”: struct“std::once_flag”需要有 dll 接口由 class“at::Context”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xcall_once.h(21): message : 参见“std::once_flag”的声明
D:\vscode\libtorch\include\ATen/Context.h(210,26): warning C4251: “at::Context::thh_init”: struct“std::once_flag”需要有 dll 接口由 class“at::Context”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xcall_once.h(21): message : 参见“std::once_flag”的声明
D:\vscode\libtorch\include\ATen/Context.h(223,47): warning C4251: “at::Context::quantized_engine”: class“c10::optional<c10::QEngine>”需要有 dll 接口由 class“at::Context”的客户端使用
D:\vscode\libtorch\include\ATen/Context.h(223): message : 参见“c10::optional<c10::QEngine>”的声明
D:\vscode\libtorch\include\ATen/Context.h(224,58): warning C4251: “at::Context::thc_state”: class“std::unique_ptr<THCState,void (__cdecl *)(THCState *)>”需要有 dll 接口由 class“at::Context”的客户端使用
D:\vscode\libtorch\include\ATen/detail/CUDAHooksInterface.h(76): message : 参见“std::unique_ptr<THCState,void (__cdecl *)(THCState *)>”的声明
D:\vscode\libtorch\include\ATen/Context.h(225,58): warning C4251: “at::Context::thh_state”: class“std::unique_ptr<THHState,void (__cdecl *)(THHState *)>”需要有 dll 接口由 class“at::Context”的客户端使用
D:\vscode\libtorch\include\ATen/detail/HIPHooksInterface.h(33): message : 参见“std::unique_ptr<THHState,void (__cdecl *)(THHState *)>”的声明
D:\vscode\libtorch\include\ATen/TensorGeometry.h(56,30): warning C4251: “at::TensorGeometry::sizes_”: class“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口由 struct“at::TensorGeometry”的客户端使用
D:\vscode\libtorch\include\c10/core/MemoryFormat.h(56): message : 参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
D:\vscode\libtorch\include\ATen/TensorGeometry.h(57,32): warning C4251: “at::TensorGeometry::strides_”: class“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口由 struct“at::TensorGeometry”的客户端使用
D:\vscode\libtorch\include\c10/core/MemoryFormat.h(56): message : 参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue.h(869,51): warning C4251: “c10::StrongTypePtr::cu_”: class“std::shared_ptr<torch::jit::CompilationUnit>”需要有 dll 接口由 struct“c10::StrongTypePtr”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(866): message : 参见“std::shared_ptr<torch::jit::CompilationUnit>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue.h(870,30): warning C4251: “c10::StrongTypePtr::type_”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::StrongTypePtr”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/Dict_inl.h(41,41): warning C4244: “参数”: 从“int64_t”转换到“const _Kty”，可能丢失数据
          with
          [
              _Kty=int
          ]
D:\vscode\libtorch\include\ATen/core/jit_type.h(80,61): warning C4251: “std::enable_shared_from_this<c10::Type>::_Wptr”: class“std::weak_ptr<_Ty>”需要有 dll 接口由 class“std::enable_shared_from_this<c10::Type>”的客户端使用
          with
          [
              _Ty=c10::Type
          ]
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\memory(2491): message : 参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=c10::Type
          ]
D:\vscode\libtorch\include\ATen/core/jit_type.h(286,70): warning C4251: “c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(370,38): warning C4251: “c10::Stride::stride_index_”: class“c10::optional<size_t>”需要有 dll 接口由 struct“c10::Stride”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(360): message : 参见“c10::optional<size_t>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(371,34): warning C4251: “c10::Stride::contiguous_”: class“c10::optional<bool>”需要有 dll 接口由 struct“c10::Stride”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorOptions.h(39): message : 参见“c10::optional<bool>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(372,32): warning C4251: “c10::Stride::stride_”: class“c10::optional<size_t>”需要有 dll 接口由 struct“c10::Stride”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(360): message : 参见“c10::optional<size_t>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(434,41): warning C4251: “c10::ShapeSymbol::num_symbols”: struct“std::atomic<unsigned __int64>”需要有 dll 接口由 struct“c10::ShapeSymbol”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\atomic(2771): message : 参见“std::atomic<unsigned __int64>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(525,50): warning C4251: “c10::SymbolicShape::dims_”: class“c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>”需要有 dll 接口由 struct“c10::SymbolicShape”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(499): message : 参见“c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(833,45): warning C4251: “c10::TensorType::scalar_type_”: class“c10::optional<c10::ScalarType>”需要有 dll 接口由 struct“c10::TensorType”的客户端使用
D:\vscode\libtorch\include\c10/core/ScalarType.h(181): message : 参见“c10::optional<c10::ScalarType>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(834,36): warning C4251: “c10::TensorType::device_”: class“c10::optional<c10::Device>”需要有 dll 接口由 struct“c10::TensorType”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorOptions.h(21): message : 参见“c10::optional<c10::Device>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(836,32): warning C4251: “c10::TensorType::strides_”: struct“c10::VaryingShape<c10::Stride>”需要有 dll 接口由 struct“c10::TensorType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(623): message : 参见“c10::VaryingShape<c10::Stride>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(837,37): warning C4251: “c10::TensorType::requires_grad_”: class“c10::optional<bool>”需要有 dll 接口由 struct“c10::TensorType”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorOptions.h(39): message : 参见“c10::optional<bool>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(849,33): warning C4251: “c10::TensorType::undefined_”: class“c10::optional<bool>”需要有 dll 接口由 struct“c10::TensorType”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorOptions.h(39): message : 参见“c10::optional<bool>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(683,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/jit_type.h(686,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/jit_type.h(857,62): warning C4251: “c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(973,29): warning C4251: “c10::DictType::types”: class“std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>”需要有 dll 接口由 struct“c10::DictType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(191): message : 参见“std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(981,66): warning C4251: “c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1023,62): warning C4251: “c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1073,37): warning C4251: “c10::NamedType::name_”: class“c10::optional<c10::QualifiedName>”需要有 dll 接口由 struct“c10::NamedType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1057): message : 参见“c10::optional<c10::QualifiedName>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1156,33): warning C4251: “c10::TupleType::elements_”: class“std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>”需要有 dll 接口由 struct“c10::TupleType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(191): message : 参见“std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1158,42): warning C4251: “c10::TupleType::schema_”: class“std::shared_ptr<c10::FunctionSchema>”需要有 dll 接口由 struct“c10::TupleType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1124): message : 参见“std::shared_ptr<c10::FunctionSchema>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1240,22): warning C4251: “c10::EnumType::value_type_”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::EnumType”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1241,48): warning C4251: “c10::EnumType::enum_names_values_”: class“std::vector<c10::EnumNameValue,std::allocator<c10::EnumNameValue>>”需要有 dll 接口由 struct“c10::EnumType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1170): message : 参见“std::vector<c10::EnumNameValue,std::allocator<c10::EnumNameValue>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1242,51): warning C4251: “c10::EnumType::cu_”: class“std::weak_ptr<torch::jit::CompilationUnit>”需要有 dll 接口由 struct“c10::EnumType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1170): message : 参见“std::weak_ptr<torch::jit::CompilationUnit>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1930,25): warning C4251: “c10::ClassAttribute::attributeType_”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::ClassAttribute”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(1931,29): warning C4251: “c10::ClassAttribute::attributeName_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“c10::ClassAttribute”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2255,42): warning C4251: “c10::ClassType::constantNames_”: class“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\c10/util/Exception.h(35): message : 参见“std::vector<std::string,std::allocator<std::string>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2256,38): warning C4251: “c10::ClassType::constantValues_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2258,51): warning C4251: “c10::ClassType::compilation_unit_”: class“std::weak_ptr<torch::jit::CompilationUnit>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1170): message : 参见“std::weak_ptr<torch::jit::CompilationUnit>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2261,42): warning C4251: “c10::ClassType::attributes_”: class“std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(2188): message : 参见“std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2264,39): warning C4251: “c10::ClassType::attributeTypes_”: class“std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(191): message : 参见“std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2267,46): warning C4251: “c10::ClassType::methods_”: class“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1973): message : 参见“std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2270,36): warning C4251: “c10::ClassType::properties_”: class“std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>”需要有 dll 接口由 struct“c10::ClassType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(2270): message : 参见“std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>”的声明
D:\vscode\libtorch\include\ATen/core/jit_type.h(2330,56): warning C4251: “c10::InterfaceType::methods_”: class“std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>”需要有 dll 接口由 struct“c10::InterfaceType”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(2330): message : 参见“std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(168,25): warning C4251: “c10::ivalue::ConstantString::str_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“c10::ivalue::ConstantString”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(188,32): warning C4251: “c10::ivalue::Tuple::elements_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 struct“c10::ivalue::Tuple”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(189,43): warning C4251: “c10::ivalue::Tuple::type_”: class“std::shared_ptr<c10::TupleType>”需要有 dll 接口由 struct“c10::ivalue::Tuple”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1090): message : 参见“std::shared_ptr<c10::TupleType>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(254,63): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 struct“c10::ivalue::Future::FutureError”的基
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(254): message : 参见“c10::ivalue::Future::FutureError”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(264,26): warning C4251: “c10::ivalue::Future::FutureError::error_msg”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“c10::ivalue::Future::FutureError”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(461,28): warning C4251: “c10::ivalue::Future::mutex_”: class“std::mutex”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(87): message : 参见“std::mutex”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(462,31): warning C4251: “c10::ivalue::Future::completed_”: struct“std::atomic<bool>”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\atomic(2759): message : 参见“std::atomic<bool>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(463,39): warning C4251: “c10::ivalue::Future::finished_cv_”: class“std::condition_variable”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(574): message : 参见“std::condition_variable”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(466,16): warning C4251: “c10::ivalue::Future::type_”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue.h(26): message : 参见“std::shared_ptr<c10::Type>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(467,52): warning C4251: “c10::ivalue::Future::callbacks_”: class“std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(467): message : 参见“std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(468,27): warning C4251: “c10::ivalue::Future::eptr_”: class“std::exception_ptr”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\exception(214): message : 参见“std::exception_ptr”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(389,36): warning C4101: “e”: 未引用的局部变量
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(565,29): warning C4251: “c10::ivalue::Object::slots_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 struct“c10::ivalue::Object”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(648,1): warning C4244: “return”: 从“double”转换到“float”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(650,1): warning C4244: “return”: 从“int64_t”转换到“unsigned char”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(651,1): warning C4244: “return”: 从“int64_t”转换到“signed char”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(652,1): warning C4244: “return”: 从“int64_t”转换到“unsigned short”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(653,1): warning C4244: “return”: 从“int64_t”转换到“short”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(654,1): warning C4244: “return”: 从“int64_t”转换到“int”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(655,1): warning C4244: “return”: 从“int64_t”转换到“uint32_t”，可能丢失数据
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(657,1): warning C4244: “return”: 从“int64_t”转换到“c10::detail::_guarded_unsigned_long”，可能丢失数据
D:\vscode\libtorch\include\ATen/TensorNames.h(40,28): warning C4251: “at::namedinference::TensorName::origin_”: class“c10::ArrayRef<at::Dimname>”需要有 dll 接口由 struct“at::namedinference::TensorName”的客户端使用
D:\vscode\libtorch\include\ATen/core/Dimname.h(36): message : 参见“c10::ArrayRef<at::Dimname>”的声明
D:\vscode\libtorch\include\ATen/TensorNames.h(70,23): warning C4251: “at::namedinference::TensorNames::names_”: class“c10::SmallVector<at::namedinference::TensorName,10>”需要有 dll 接口由 struct“at::namedinference::TensorNames”的客户端使用
D:\vscode\libtorch\include\ATen/TensorNames.h(49): message : 参见“c10::SmallVector<at::namedinference::TensorName,10>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(190,20): warning C4251: “torch::autograd::AutogradMeta::name_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“torch::autograd::AutogradMeta”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(193,33): warning C4251: “torch::autograd::AutogradMeta::grad_fn_”: class“std::shared_ptr<torch::autograd::Node>”需要有 dll 接口由 struct“torch::autograd::AutogradMeta”的客户端使用
D:\vscode\libtorch\include\ATen/core/TensorBody.h(1246): message : 参见“std::shared_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(194,40): warning C4251: “torch::autograd::AutogradMeta::grad_accumulator_”: class“std::weak_ptr<torch::autograd::Node>”需要有 dll 接口由 struct“torch::autograd::AutogradMeta”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(118): message : 参见“std::weak_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(196,55): warning C4251: “torch::autograd::AutogradMeta::hooks_”: class“std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<std::shared_ptr<torch::autograd::FunctionPreHook>>>”需要有 dll 接口由 struct“torch::autograd::AutogradMeta”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(174): message : 参见“std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<std::shared_ptr<torch::autograd::FunctionPreHook>>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(197,45): warning C4251: “torch::autograd::AutogradMeta::cpp_hooks_list”: class“std::shared_ptr<torch::autograd::hooks_list>”需要有 dll 接口由 struct“torch::autograd::AutogradMeta”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/cpp_hook.h(11): message : 参见“std::shared_ptr<torch::autograd::hooks_list>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(216,20): warning C4251: “torch::autograd::AutogradMeta::mutex_”: class“std::mutex”需要有 dll 接口由 struct“torch::autograd::AutogradMeta”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(87): message : 参见“std::mutex”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(406,71): warning C4251: “torch::autograd::DifferentiableViewMeta::view_fn_”: class“c10::optional<std::function<at::Tensor (const at::Tensor &)>>”需要有 dll 接口由 struct“torch::autograd::DifferentiableViewMeta”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(406): message : 参见“c10::optional<std::function<at::Tensor (const at::Tensor &)>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(107,52): warning C4275: 非 dll 接口 struct“torch::jit::AttributeValue”用作 dll 接口 struct“torch::jit::GraphAttr”的基
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(41): message : 参见“torch::jit::AttributeValue”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(107): message : 参见“torch::jit::GraphAttr”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(121,32): warning C4251: “torch::jit::GraphAttr::value_”: class“std::shared_ptr<torch::jit::Graph>”需要有 dll 接口由 struct“torch::jit::GraphAttr”的客户端使用
D:\vscode\libtorch\include\ATen/core/function.h(21): message : 参见“std::shared_ptr<torch::jit::Graph>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(124,53): warning C4275: 非 dll 接口 struct“torch::jit::AttributeValue”用作 dll 接口 struct“torch::jit::GraphsAttr”的基
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(41): message : 参见“torch::jit::AttributeValue”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(124): message : 参见“torch::jit::GraphsAttr”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(138,19): warning C4251: “torch::jit::GraphsAttr::value_”: class“std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>”需要有 dll 接口由 struct“torch::jit::GraphsAttr”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/attributes.h(125): message : 参见“std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/frontend/source_range.h(176,34): warning C4251: “torch::jit::SourceRange::source_”: class“std::shared_ptr<torch::jit::Source>”需要有 dll 接口由 struct“torch::jit::SourceRange”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/frontend/source_range.h(110): message : 参见“std::shared_ptr<torch::jit::Source>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/scope.h(25,19): warning C4251: “torch::jit::Scope::parent_”: class“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“torch::jit::Scope”的客户端使用
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\vscode\libtorch\include\torch/csrc/jit/ir/scope.h(20): message : 参见“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\vscode\libtorch\include\torch/csrc/jit/ir/scope.h(87,45): warning C4251: “torch::jit::InlinedCallStack::callee_”: class“c10::optional<torch::jit::InlinedCallStackPtr>”需要有 dll 接口由 struct“torch::jit::InlinedCallStack”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/scope.h(87): message : 参见“c10::optional<torch::jit::InlinedCallStackPtr>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/constants.h(20,75): warning C4275: 非 dll 接口 class“std::runtime_error”用作 dll 接口 struct“torch::jit::constant_not_supported_error”的基
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\stdexcept(107): message : 参见“std::runtime_error”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/constants.h(20): message : 参见“torch::jit::constant_not_supported_error”的声明
D:\vscode\libtorch\include\ATen/core/boxing/KernelFunction.h(231,43): warning C4251: “c10::KernelFunction::functor_”: class“std::shared_ptr<c10::OperatorKernel>”需要有 dll 接口由 class“c10::KernelFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/boxing/KernelFunction.h(231): message : 参见“std::shared_ptr<c10::OperatorKernel>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/DispatchKeyExtractor.h(191,51): warning C4251: “c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_”: struct“c10::utils::bitset”需要有 dll 接口由 struct“c10::DispatchKeyExtractor”的客户端使用
D:\vscode\libtorch\include\c10/util/Bitset.h(23): message : 参见“c10::utils::bitset”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/DispatchKeyExtractor.h(194,37): warning C4251: “c10::DispatchKeyExtractor::nonFallthroughKeys_”: class“c10::DispatchKeySet”需要有 dll 接口由 struct“c10::DispatchKeyExtractor”的客户端使用
D:\vscode\libtorch\include\c10/core/DispatchKeySet.h(34): message : 参见“c10::DispatchKeySet”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/CppSignature.h(52,31): warning C4251: “c10::impl::CppSignature::signature_”: class“std::type_index”需要有 dll 接口由 class“c10::impl::CppSignature”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\typeindex(25): message : 参见“std::type_index”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(185,21): warning C4251: “c10::impl::OperatorEntry::name_”: struct“c10::OperatorName”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/operator_name.h(14): message : 参见“c10::OperatorName”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(186,41): warning C4251: “c10::impl::OperatorEntry::schema_”: class“c10::optional<c10::impl::AnnotatedSchema>”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(186): message : 参见“c10::optional<c10::impl::AnnotatedSchema>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(195,83): warning C4251: “c10::impl::OperatorEntry::manuallyBoxedKernel_”: class“c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(195): message : 参见“c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(228,71): warning C4251: “c10::impl::OperatorEntry::kernels_”: class“ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(228): message : 参见“ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>”的声明
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(230,45): warning C4251: “c10::impl::OperatorEntry::catchAllKernel_”: class“std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(117): message : 参见“std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(231,33): warning C4251: “c10::impl::OperatorEntry::missingKernel_”: struct“c10::impl::AnnotatedKernel”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(31): message : 参见“c10::impl::AnnotatedKernel”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(232,61): warning C4251: “c10::impl::OperatorEntry::ambiguousAutogradOtherKernel_”: struct“c10::impl::AnnotatedKernel”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(31): message : 参见“c10::impl::AnnotatedKernel”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(239,45): warning C4251: “c10::impl::OperatorEntry::cpp_signature_”: class“c10::optional<c10::impl::CppSignature>”需要有 dll 接口由 class“c10::impl::OperatorEntry”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(121): message : 参见“c10::optional<c10::impl::CppSignature>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(65,46): warning C4251: “at::StringView::owned_str_ptr_”: class“std::shared_ptr<std::string>”需要有 dll 接口由 struct“at::StringView”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(65): message : 参见“std::shared_ptr<std::string>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(196,45): warning C4251: “at::RecordFunction::sorted_active_tls_handles_”: class“c10::SmallVector<uint64_t,4>”需要有 dll 接口由 struct“at::RecordFunction”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(80): message : 参见“c10::SmallVector<uint64_t,4>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(197,48): warning C4251: “at::RecordFunction::sorted_active_global_handles_”: class“c10::SmallVector<uint64_t,4>”需要有 dll 接口由 struct“at::RecordFunction”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(80): message : 参见“c10::SmallVector<uint64_t,4>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(201,31): warning C4251: “at::RecordFunction::tls_ctx_”: class“std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,std::allocator<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>>>”需要有 dll 接口由 struct“at::RecordFunction”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(81): message : 参见“std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,std::allocator<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>>>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(205,34): warning C4251: “at::RecordFunction::global_ctx_”: class“std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,std::allocator<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>>>”需要有 dll 接口由 struct“at::RecordFunction”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(81): message : 参见“std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,std::allocator<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>>>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(214,35): warning C4251: “at::RecordFunction::inputs_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 struct“at::RecordFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(339,80): warning C4251: “at::RecordFunctionCallback::start_”: class“std::function<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>> (const at::RecordFunction &)>”需要有 dll 接口由 class“at::RecordFunctionCallback”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(256): message : 参见“std::function<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>> (const at::RecordFunction &)>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(340,68): warning C4251: “at::RecordFunctionCallback::end_”: class“std::function<void (const at::RecordFunction &,at::ObserverContext *)>”需要有 dll 接口由 class“at::RecordFunctionCallback”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(257): message : 参见“std::function<void (const at::RecordFunction &,at::ObserverContext *)>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(341,65): warning C4251: “at::RecordFunctionCallback::should_run_”: class“std::function<bool (const at::RecordFunctionCallback &)>”需要有 dll 接口由 class“at::RecordFunctionCallback”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(306): message : 参见“std::function<bool (const at::RecordFunctionCallback &)>”的声明
D:\vscode\libtorch\include\ATen/record_function.h(494,48): warning C4251: “at::RecordFunctionTLS::sorted_tls_callbacks_”: class“std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<std::pair<at::RecordFunctionCallback,at::CallbackHandle>>>”需要有 dll 接口由 struct“at::RecordFunctionTLS”的客户端使用
D:\vscode\libtorch\include\ATen/record_function.h(400): message : 参见“std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<std::pair<at::RecordFunctionCallback,at::CallbackHandle>>>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(232,36): warning C4251: “c10::Dispatcher::operators_”: class“std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>”需要有 dll 接口由 class“c10::Dispatcher”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(232): message : 参见“std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(233,83): warning C4251: “c10::Dispatcher::operatorLookupTable_”: class“c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>”需要有 dll 接口由 class“c10::Dispatcher”的客户端使用
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(233): message : 参见“c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>”的声明
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(235,58): warning C4251: “c10::Dispatcher::libraries_”: class“ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>”需要有 dll 接口由 class“c10::Dispatcher”的客户端使用
          with
          [
              K=std::string,
              V=std::string
          ]
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(235): message : 参见“ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>”的声明
          with
          [
              K=std::string,
              V=std::string
          ]
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(239,63): warning C4251: “c10::Dispatcher::listeners_”: class“std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>”需要有 dll 接口由 class“c10::Dispatcher”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(239): message : 参见“std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(240,20): warning C4251: “c10::Dispatcher::mutex_”: class“std::mutex”需要有 dll 接口由 class“c10::Dispatcher”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(87): message : 参见“std::mutex”的声明
D:\vscode\libtorch\include\ATen/core/dispatch/Dispatcher.h(305,65): warning C4251: “c10::OperatorHandle::operatorIterator_”: class“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>”需要有 dll 接口由 class“c10::OperatorHandle”的客户端使用
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\list(796): message : 参见“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>”的声明
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(427,75): warning C4251: “c10::RegisterOperators::Options::schemaOrName_”: class“c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>”需要有 dll 接口由 class“c10::RegisterOperators::Options”的客户端使用
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(427): message : 参见“c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>”的声明
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(429,50): warning C4251: “c10::RegisterOperators::Options::kernels”: class“std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>”需要有 dll 接口由 class“c10::RegisterOperators::Options”的客户端使用
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(429): message : 参见“std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>”的声明
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(430,51): warning C4251: “c10::RegisterOperators::Options::aliasAnalysisKind_”: class“c10::optional<c10::AliasAnalysisKind>”需要有 dll 接口由 class“c10::RegisterOperators::Options”的客户端使用
D:\vscode\libtorch\include\ATen/core/function_schema.h(190): message : 参见“c10::optional<c10::AliasAnalysisKind>”的声明
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(581,50): warning C4251: “c10::RegisterOperators::registrars_”: class“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”需要有 dll 接口由 class“c10::RegisterOperators”的客户端使用
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(581): message : 参见“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”的声明
D:\vscode\libtorch\include\torch/library.h(179,48): warning C4251: “torch::CppFunction::dispatch_key_”: class“c10::optional<c10::DispatchKey>”需要有 dll 接口由 class“torch::CppFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(119): message : 参见“c10::optional<c10::DispatchKey>”的声明
D:\vscode\libtorch\include\torch/library.h(181,56): warning C4251: “torch::CppFunction::cpp_signature_”: class“c10::optional<c10::impl::CppSignature>”需要有 dll 接口由 class“torch::CppFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(121): message : 参见“c10::optional<c10::impl::CppSignature>”的声明
D:\vscode\libtorch\include\torch/library.h(182,47): warning C4251: “torch::CppFunction::schema_”: class“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”需要有 dll 接口由 class“torch::CppFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(32): message : 参见“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”的声明
D:\vscode\libtorch\include\torch/library.h(183,21): warning C4251: “torch::CppFunction::debug_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“torch::CppFunction”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\torch/library.h(585,33): warning C4251: “torch::Library::ns_”: class“c10::optional<std::string>”需要有 dll 接口由 class“torch::Library”的客户端使用
D:\vscode\libtorch\include\ATen/NativeFunctions.h(2110): message : 参见“c10::optional<std::string>”的声明
D:\vscode\libtorch\include\torch/library.h(586,48): warning C4251: “torch::Library::dispatch_key_”: class“c10::optional<c10::DispatchKey>”需要有 dll 接口由 class“torch::Library”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(119): message : 参见“c10::optional<c10::DispatchKey>”的声明
D:\vscode\libtorch\include\torch/library.h(590,55): warning C4251: “torch::Library::registrars_”: class“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”需要有 dll 接口由 class“torch::Library”的客户端使用
D:\vscode\libtorch\include\ATen/core/op_registration/op_registration.h(581): message : 参见“std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/runtime/operator.h(195,48): warning C4251: “torch::jit::Operator::op_”: class“c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>”需要有 dll 接口由 struct“torch::jit::Operator”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/runtime/operator.h(195): message : 参见“c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(260,30): warning C4251: “torch::jit::Node::inputs_”: class“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(138): message : 参见“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(261,31): warning C4251: “torch::jit::Node::outputs_”: class“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(138): message : 参见“std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(263,30): warning C4251: “torch::jit::Node::blocks_”: class“std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(263): message : 参见“std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(266,43): warning C4251: “torch::jit::Node::source_range_”: class“c10::optional<torch::jit::SourceRange>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/frontend/source_range.h(85): message : 参见“c10::optional<torch::jit::SourceRange>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(267,18): warning C4251: “torch::jit::Node::scope_”: class“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\vscode\libtorch\include\torch/csrc/jit/ir/scope.h(20): message : 参见“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(268,48): warning C4251: “torch::jit::Node::callstack_”: class“c10::optional<torch::jit::InlinedCallStackPtr>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/scope.h(87): message : 参见“c10::optional<torch::jit::InlinedCallStackPtr>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(819,29): warning C4251: “torch::jit::Node::values_”: class“std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>”需要有 dll 接口由 struct“torch::jit::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(819): message : 参见“std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/ir/ir.h(1365,54): warning C4251: “torch::jit::ProfileOptionalOp::callback_”: class“std::function<void (torch::jit::Stack &)>”需要有 dll 接口由 struct“torch::jit::ProfileOptionalOp”的客户端使用
D:\vscode\libtorch\include\ATen/core/builtin_function.h(13): message : 参见“std::function<void (torch::jit::Stack &)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(200,34): warning C4251: “torch::jit::ArgumentSpecCreator::instructions_”: class“std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>”需要有 dll 接口由 struct“torch::jit::ArgumentSpecCreator”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(200): message : 参见“std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(236,1): warning C4267: “初始化”: 从“size_t”转换到“int32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(236,1): warning C4267: “初始化”: 从“size_t”转换到“const int32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(241,1): warning C4244: “+=”: 从“int64_t”转换到“int32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(260,1): warning C4244: “+=”: 从“int64_t”转换到“int32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/jit/runtime/argument_spec.h(432,39): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
D:\vscode\libtorch\include\ATen/ThreadLocalState.h(31,57): warning C4251: “at::ThreadLocalState::debug_info_”: class“std::shared_ptr<c10::ThreadLocalDebugInfo>”需要有 dll 接口由 class“at::ThreadLocalState”的客户端使用
D:\vscode\libtorch\include\c10/util/ThreadLocalDebugInfo.h(38): message : 参见“std::shared_ptr<c10::ThreadLocalDebugInfo>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/runtime/interpreter.h(63,34): warning C4251: “torch::jit::Code::pImpl”: class“std::shared_ptr<torch::jit::CodeImpl>”需要有 dll 接口由 struct“torch::jit::Code”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/runtime/interpreter.h(63): message : 参见“std::shared_ptr<torch::jit::CodeImpl>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/runtime/graph_executor.h(85,47): warning C4251: “torch::jit::GraphExecutor::pImpl”: class“std::shared_ptr<torch::jit::GraphExecutorImplBase>”需要有 dll 接口由 struct“torch::jit::GraphExecutor”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/runtime/graph_executor.h(85): message : 参见“std::shared_ptr<torch::jit::GraphExecutorImplBase>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(115,27): warning C4251: “torch::jit::GraphFunction::name_”: struct“c10::QualifiedName”需要有 dll 接口由 struct“torch::jit::GraphFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/qualified_name.h(11): message : 参见“c10::QualifiedName”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(117,32): warning C4251: “torch::jit::GraphFunction::graph_”: class“std::shared_ptr<torch::jit::Graph>”需要有 dll 接口由 struct“torch::jit::GraphFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/function.h(21): message : 参见“std::shared_ptr<torch::jit::Graph>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(122,65): warning C4251: “torch::jit::GraphFunction::optimized_graph_”: class“c10::optional<std::shared_ptr<torch::jit::Graph>>”需要有 dll 接口由 struct“torch::jit::GraphFunction”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(122): message : 参见“c10::optional<std::shared_ptr<torch::jit::Graph>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(129,45): warning C4251: “torch::jit::GraphFunction::compile_mutex”: class“std::recursive_mutex”需要有 dll 接口由 struct“torch::jit::GraphFunction”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(96): message : 参见“std::recursive_mutex”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(136,56): warning C4251: “torch::jit::GraphFunction::function_creator_”: class“std::function<void (torch::jit::GraphFunction &)>”需要有 dll 接口由 struct“torch::jit::GraphFunction”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(15): message : 参见“std::function<void (torch::jit::GraphFunction &)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/function_impl.h(141,50): warning C4251: “torch::jit::GraphFunction::schema_”: class“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”需要有 dll 接口由 struct“torch::jit::GraphFunction”的客户端使用
D:\vscode\libtorch\include\ATen/core/dispatch/OperatorEntry.h(32): message : 参见“std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/method.h(57,19): warning C4251: “torch::jit::Method::owner_”: class“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“torch::jit::Method”的客户端使用
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\vscode\libtorch\include\ATen/core/ivalue.h(484): message : 参见“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\vscode\libtorch\include\torch/csrc/jit/api/object.h(136,29): warning C4251: “torch::jit::Object::_ivalue_”: class“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“torch::jit::Object”的客户端使用
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\vscode\libtorch\include\ATen/core/ivalue.h(484): message : 参见“c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(43,57): warning C4251: “std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr”: class“std::weak_ptr<_Ty>”需要有 dll 接口由 class“std::enable_shared_from_this<torch::jit::tracer::TracingState>”的客户端使用
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\memory(2491): message : 参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(47,31): warning C4251: “torch::jit::tracer::TracingState::graph”: class“std::shared_ptr<torch::jit::Graph>”需要有 dll 接口由 struct“torch::jit::tracer::TracingState”的客户端使用
D:\vscode\libtorch\include\ATen/core/function.h(21): message : 参见“std::shared_ptr<torch::jit::Graph>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(52,45): warning C4251: “torch::jit::tracer::TracingState::lookup_var_name_fn”: class“std::function<std::string (const torch::autograd::Variable &)>”需要有 dll 接口由 struct“torch::jit::tracer::TracingState”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(51): message : 参见“std::function<std::string (const torch::autograd::Variable &)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(85,31): warning C4251: “torch::jit::tracer::TracingState::env_stack”: class“std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<torch::jit::tracer::TracingState::Frame>>”需要有 dll 接口由 struct“torch::jit::tracer::TracingState”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(85): message : 参见“std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<torch::jit::tracer::TracingState::Frame>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/frontend/tracer.h(181,38): warning C4251: “torch::jit::tracer::NoWarn::state”: class“std::shared_ptr<_Ty>”需要有 dll 接口由 struct“torch::jit::tracer::NoWarn”的客户端使用
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\memory(2483): message : 参见“std::shared_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(180,38): warning C4251: “caffe2::serialize::PyTorchStreamReader::ar_”: class“std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamReader”的客户端使用
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(180): message : 参见“std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(181,28): warning C4251: “caffe2::serialize::PyTorchStreamReader::archive_name_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamReader”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(182,39): warning C4251: “caffe2::serialize::PyTorchStreamReader::archive_name_plus_slash_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamReader”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(183,44): warning C4251: “caffe2::serialize::PyTorchStreamReader::in_”: class“std::unique_ptr<caffe2::serialize::ReadAdapterInterface,std::default_delete<caffe2::serialize::ReadAdapterInterface>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamReader”的客户端使用
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(159): message : 参见“std::unique_ptr<caffe2::serialize::ReadAdapterInterface,std::default_delete<caffe2::serialize::ReadAdapterInterface>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(216,38): warning C4251: “caffe2::serialize::PyTorchStreamWriter::ar_”: class“std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamWriter”的客户端使用
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(180): message : 参见“std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(217,28): warning C4251: “caffe2::serialize::PyTorchStreamWriter::archive_name_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamWriter”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(218,39): warning C4251: “caffe2::serialize::PyTorchStreamWriter::archive_name_plus_slash_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamWriter”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(219,23): warning C4251: “caffe2::serialize::PyTorchStreamWriter::padding_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamWriter”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\xstring(4648): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(220,29): warning C4251: “caffe2::serialize::PyTorchStreamWriter::file_stream_”: class“std::basic_ofstream<char,std::char_traits<char>>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamWriter”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\iosfwd(225): message : 参见“std::basic_ofstream<char,std::char_traits<char>>”的声明
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(221,58): warning C4251: “caffe2::serialize::PyTorchStreamWriter::writer_func_”: class“std::function<size_t (const void *,size_t)>”需要有 dll 接口由 class“caffe2::serialize::PyTorchStreamWriter”的客户端使用
D:\vscode\libtorch\include\caffe2/serialize/inline_container.h(191): message : 参见“std::function<size_t (const void *,size_t)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(288,52): warning C4251: “torch::jit::CompilationUnit::functions_”: class“std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>”需要有 dll 接口由 struct“torch::jit::CompilationUnit”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(288): message : 参见“std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(290,55): warning C4251: “torch::jit::CompilationUnit::dict_”: class“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”需要有 dll 接口由 struct“torch::jit::CompilationUnit”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(290): message : 参见“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(291,60): warning C4251: “torch::jit::CompilationUnit::classDict_”: class“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”需要有 dll 接口由 struct“torch::jit::CompilationUnit”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(290): message : 参见“std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(298,42): warning C4251: “torch::jit::CompilationUnit::classes_”: class“std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>”需要有 dll 接口由 struct“torch::jit::CompilationUnit”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/api/compilation_unit.h(298): message : 参见“std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(225,51): warning C4251: “torch::jit::Pickler::writer_”: class“std::function<void (const char *,size_t)>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(122): message : 参见“std::function<void (const char *,size_t)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(232,27): warning C4251: “torch::jit::Pickler::stack_”: class“std::vector<char,std::allocator<char>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(232): message : 参见“std::vector<char,std::allocator<char>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(244,65): warning C4251: “torch::jit::Pickler::memoized_ivalue_map_”: class“std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(244): message : 参见“std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(250,40): warning C4251: “torch::jit::Pickler::memoized_ivalues_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(252,76): warning C4251: “torch::jit::Pickler::type_renamer_”: class“std::function<c10::QualifiedName (const c10::ClassTypePtr &)>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(128): message : 参见“std::function<c10::QualifiedName (const c10::ClassTypePtr &)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(259,39): warning C4251: “torch::jit::Pickler::tensor_data_”: class“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\ATen/core/TensorBody.h(644): message : 参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(260,66): warning C4251: “torch::jit::Pickler::memoized_storage_map_”: class“std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(244): message : 参见“std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(262,66): warning C4251: “torch::jit::Pickler::memoized_globals_map_”: class“std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(262): message : 参见“std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(263,66): warning C4251: “torch::jit::Pickler::memoized_strings_map_”: class“std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(262): message : 参见“std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(264,66): warning C4251: “torch::jit::Pickler::memoized_devices_map_”: class“std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>”需要有 dll 接口由 class“torch::jit::Pickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/pickler.h(262): message : 参见“std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(114,47): warning C4251: “torch::jit::Unpickler::reader_”: class“std::function<size_t (char *,size_t)>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(31): message : 参见“std::function<size_t (char *,size_t)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(120,29): warning C4251: “torch::jit::Unpickler::stack_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(124,50): warning C4251: “torch::jit::Unpickler::globals_”: class“std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\ATen/core/ivalue_inl.h(467): message : 参见“std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(125,34): warning C4251: “torch::jit::Unpickler::memo_table_”: class“std::vector<c10::IValue,std::allocator<c10::IValue>>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\ATen/core/List.h(24): message : 参见“std::vector<c10::IValue,std::allocator<c10::IValue>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(126,29): warning C4251: “torch::jit::Unpickler::marks_”: class“std::vector<T,std::allocator<T>>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
          with
          [
              T=size_t
          ]
D:\vscode\libtorch\include\c10/util/ArrayRef.h(220): message : 参见“std::vector<T,std::allocator<T>>”的声明
          with
          [
              T=size_t
          ]
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(133,60): warning C4251: “torch::jit::Unpickler::type_cache_”: class“std::unordered_map<std::string,c10::TypePtr,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::TypePtr>>>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\ATen/core/jit_type.h(1862): message : 参见“std::unordered_map<std::string,c10::TypePtr,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::TypePtr>>>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(136,30): warning C4251: “torch::jit::Unpickler::type_resolver_”: class“std::function<c10::StrongTypePtr (const c10::QualifiedName &)>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(12): message : 参见“std::function<c10::StrongTypePtr (const c10::QualifiedName &)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(137,24): warning C4251: “torch::jit::Unpickler::obj_loader_”: class“std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(14): message : 参见“std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>”的声明
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(140,62): warning C4251: “torch::jit::Unpickler::read_record_”: class“std::function<c10::DataPtr (const std::string &)>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(45): message : 参见“std::function<c10::DataPtr (const std::string &)>”的声明
D:\vscode\libtorch\include\torch/csrc/jit/serialization/unpickler.h(141,36): warning C4251: “torch::jit::Unpickler::device_”: class“c10::optional<c10::Device>”需要有 dll 接口由 class“torch::jit::Unpickler”的客户端使用
D:\vscode\libtorch\include\c10/core/TensorOptions.h(21): message : 参见“c10::optional<c10::Device>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(338,44): warning C4251: “torch::autograd::profiler::Event::shapes_”: class“std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>”需要有 dll 接口由 struct“torch::autograd::profiler::Event”的客户端使用
D:\vscode\libtorch\include\ATen/WrapDimUtils.h(25): message : 参见“std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(342,28): warning C4251: “torch::autograd::profiler::Event::cuda_event”: class“std::shared_ptr<CUevent_st>”需要有 dll 接口由 struct“torch::autograd::profiler::Event”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(24): message : 参见“std::shared_ptr<CUevent_st>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(348,34): warning C4251: “torch::autograd::profiler::Event::stack_”: class“std::vector<std::string,std::allocator<std::string>>”需要有 dll 接口由 struct“torch::autograd::profiler::Event”的客户端使用
D:\vscode\libtorch\include\c10/util/Exception.h(35): message : 参见“std::vector<std::string,std::allocator<std::string>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(189,17): warning C4244: “初始化”: 从“double”转换到“int64_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(419,39): warning C4251: “torch::autograd::profiler::RecordProfile::file_”: class“std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>”需要有 dll 接口由 struct“torch::autograd::profiler::RecordProfile”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(419): message : 参见“std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(456,68): warning C4251: “torch::autograd::profiler::TLSProfilerGuard::cb_”: class“c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>”需要有 dll 接口由 struct“torch::autograd::profiler::TLSProfilerGuard”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(436): message : 参见“c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(457,70): warning C4251: “torch::autograd::profiler::TLSProfilerGuard::profilerDisableOptions_”: class“c10::optional<torch::autograd::profiler::ProfilerDisableOptions>”需要有 dll 接口由 struct“torch::autograd::profiler::TLSProfilerGuard”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/profiler.h(395): message : 参见“c10::optional<torch::autograd::profiler::ProfilerDisableOptions>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/saved_variable.h(47,33): warning C4251: “torch::autograd::SavedVariable::grad_fn_”: class“std::shared_ptr<torch::autograd::Node>”需要有 dll 接口由 class“torch::autograd::SavedVariable”的客户端使用
D:\vscode\libtorch\include\ATen/core/TensorBody.h(1246): message : 参见“std::shared_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/saved_variable.h(50,36): warning C4251: “torch::autograd::SavedVariable::weak_grad_fn_”: class“std::weak_ptr<torch::autograd::Node>”需要有 dll 接口由 class“torch::autograd::SavedVariable”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(118): message : 参见“std::weak_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/saved_variable.h(51,40): warning C4251: “torch::autograd::SavedVariable::grad_accumulator_”: class“std::weak_ptr<torch::autograd::Node>”需要有 dll 接口由 class“torch::autograd::SavedVariable”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(118): message : 参见“std::weak_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(98,60): warning C4251: “std::enable_shared_from_this<torch::autograd::Node>::_Wptr”: class“std::weak_ptr<torch::autograd::Node>”需要有 dll 接口由 class“std::enable_shared_from_this<torch::autograd::Node>”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(118): message : 参见“std::weak_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(426,20): warning C4251: “torch::autograd::Node::mutex_”: class“std::mutex”需要有 dll 接口由 struct“torch::autograd::Node”的客户端使用
E:\VS2019\IDE\VC\Tools\MSVC\14.28.29333\include\mutex(87): message : 参见“std::mutex”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(428,24): warning C4251: “torch::autograd::Node::next_edges_”: class“std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>”需要有 dll 接口由 struct“torch::autograd::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(33): message : 参见“std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(430,54): warning C4251: “torch::autograd::Node::anomaly_metadata_”: class“std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>”需要有 dll 接口由 struct“torch::autograd::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(430): message : 参见“std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(431,59): warning C4251: “torch::autograd::Node::pre_hooks_”: class“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”需要有 dll 接口由 struct“torch::autograd::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(336): message : 参见“std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(432,61): warning C4251: “torch::autograd::Node::post_hooks_”: class“std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>”需要有 dll 接口由 struct“torch::autograd::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(312): message : 参见“std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(433,52): warning C4251: “torch::autograd::Node::input_metadata_”: class“c10::SmallVector<torch::autograd::InputMetadata,2>”需要有 dll 接口由 struct“torch::autograd::Node”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(433): message : 参见“c10::SmallVector<torch::autograd::InputMetadata,2>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(173,1): warning C4267: “初始化”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(179,1): warning C4267: “初始化”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(186,1): warning C4267: “初始化”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(192,1): warning C4267: “return”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(247,1): warning C4267: “return”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(98,57): warning C4251: “torch::autograd::AutogradContext::saved_data”: class“ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<c10::EnumNameValue>>”需要有 dll 接口由 struct“torch::autograd::AutogradContext”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(98): message : 参见“ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<c10::EnumNameValue>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(122,58): warning C4251: “torch::autograd::AutogradContext::non_differentiable_”: class“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”需要有 dll 接口由 struct“torch::autograd::AutogradContext”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(13): message : 参见“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(123,52): warning C4251: “torch::autograd::AutogradContext::dirty_inputs_”: class“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”需要有 dll 接口由 struct“torch::autograd::AutogradContext”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(13): message : 参见“std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(124,63): warning C4251: “torch::autograd::AutogradContext::saved_variables_”: class“std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>”需要有 dll 接口由 struct“torch::autograd::AutogradContext”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/function.h(34): message : 参见“std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(125,25): warning C4251: “torch::autograd::AutogradContext::to_save_”: class“std::vector<at::Tensor,std::allocator<at::Tensor>>”需要有 dll 接口由 struct“torch::autograd::AutogradContext”的客户端使用
D:\vscode\libtorch\include\ATen/core/TensorBody.h(644): message : 参见“std::vector<at::Tensor,std::allocator<at::Tensor>>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(131,31): warning C4251: “torch::autograd::AutogradContext::grad_fn_”: class“std::weak_ptr<torch::autograd::Node>”需要有 dll 接口由 struct“torch::autograd::AutogradContext”的客户端使用
D:\vscode\libtorch\include\torch/csrc/autograd/variable.h(118): message : 参见“std::weak_ptr<torch::autograd::Node>”的声明
D:\vscode\libtorch\include\torch/csrc/autograd/custom_function.h(147,28): warning C4251: “torch::autograd::VariableInfo::size”: class“std::vector<int64_t,std::allocator<int64_t>>”需要有 dll 接口由 struct“torch::autograd::VariableInfo”的客户端使用
D:\vscode\libtorch\include\c10/core/MemoryFormat.h(56): message : 参见“std::vector<int64_t,std::allocator<int64_t>>”的声明
D:\vscode\cmake_pytorch\main.cpp(12,26): warning C4101: “e”: 未引用的局部变量
D:\vscode\libtorch\include\c10/util/Optional.h(347,1): warning C4267: “参数”: 从“size_t”转换到“T”，可能丢失数据
          with
          [
              T=int32_t
          ]
D:\vscode\libtorch\include\ATen/core/function_schema.h(251): message : 查看对正在编译的函数 模板 实例化“c10::optional<int32_t>::optional<size_t,false>(U &&)”的引用
          with
          [
              U=size_t
          ]
D:\vscode\libtorch\include\ATen/core/function_schema.h(251): message : 查看对正在编译的函数 模板 实例化“c10::optional<int32_t>::optional<size_t,false>(U &&)”的引用
          with
          [
              U=size_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39,62): warning C4244: “参数”: 从“src_t”转换到“float”，可能丢失数据
          with
          [
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39,62): warning C4244: “参数”: 从“T”转换到“float”，可能丢失数据
          with
          [
              T=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)”的引用
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39,62): warning C4244: “参数”: 从“src_t”转换到“float”，可能丢失数据
          with
          [
              src_t=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::BFloat16,double>(From,const char *)”的引用
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39,62): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39,62): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39,62): warning C4244: “参数”: 从“src_t”转换到“const T”，可能丢失数据
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<float>,double>(From,const char *)”的引用
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\vscode\libtorch\include\c10/util/complex.h(147,10): warning C4244: “初始化”: 从“const T”转换到“T”，可能丢失数据
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39): message : 查看对正在编译的函数 模板 实例化“c10::complex<float>::complex<T>(const c10::complex<double> &)”的引用
          with
          [
              T=float
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(39): message : 查看对正在编译的函数 模板 实例化“c10::complex<float>::complex<T>(const c10::complex<double> &)”的引用
          with
          [
              T=float
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(37): message : 在编译 类 模板 成员函数“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”时
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的函数 模板 实例化“dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)”的引用
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(157): message : 查看对正在编译的 类 模板 实例化“c10::static_cast_with_inter_type<To,From>”的引用
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/TypeCast.h(169): message : 查看对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/core/Scalar.h(63): message : 查看对正在编译的函数 模板 实例化“To c10::checked_convert<c10::complex<float>,c10::complex<double>>(From,const char *)”的引用
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
D:\vscode\libtorch\include\c10/util/complex.h(147,1): warning C4244: “初始化”: 从“const T”转换到“T”，可能丢失数据
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
    正在创建库 D:/vscode/cmake_pytorch/build/Release/modelproject.lib 和对象 D:/vscode/cmake_pytorch/build/Release/modelproject.exp
  modelproject.vcxproj -> D:\vscode\cmake_pytorch\build\Release\modelproject.exe
